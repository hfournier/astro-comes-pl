---
import { getEntry, type CollectionEntry } from "astro:content"
import MainLayout from "@layouts/MainLayout.astro"
import BlogCard from "./BlogCard.astro"
import type { Page } from "astro"
import Pagination from "./Pagination.astro"
import { ITEMS_PER_PAGE, SITE_TITLE } from "src/consts"
import Filter from "./Filter.astro"
import Seo from "@components/seo/Seo.astro"

type Props = {
	page: Page<CollectionEntry<"blogs">>
	collection: string
}

const { collection, page } = Astro.props
const blogTypes = await getEntry("blog_types", collection)
const defaultSeo = { title: blogTypes?.data.name, description: blogTypes?.data.description }
---

{
	blogTypes && (
		<MainLayout>
			{blogTypes.data.seo && (
				<Seo slot="head" seo={blogTypes.data.seo} options={{ brand: SITE_TITLE }} />
			)}
			{!blogTypes.data.seo && <Seo slot="head" seo={defaultSeo} options={{ brand: SITE_TITLE }} />}
			<Filter />
			<section>
				<h1>{blogTypes.data.name || blogTypes.data.seo?.title}</h1>
				{(blogTypes.data.seo?.description || blogTypes.data.description) && (
					<p>{blogTypes.data.seo?.description || blogTypes.data.description}</p>
				)}
				{page && (
					<div class="min-h grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
						{page.data.map((entry) => (
							<BlogCard
								title={entry.data.title}
								link={`/blog/${entry.slug}${Astro.url.search}`}
								slug={entry.slug}
								mediaSrc={entry.data.featuredMedia?.src}
								mediaAlt={entry.data.featuredMedia?.alt}
							>
								{entry.data.description}
							</BlogCard>
						))}
					</div>
				)}
				{!page && <div>No blog posts found</div>}

				{page && page.total > ITEMS_PER_PAGE && (
					<Pagination
						prevUrl={page.url.prev}
						currentUrl={page.url.current}
						nextUrl={page.url.next}
						currentPage={page.currentPage}
						lastPage={page.lastPage}
					/>
				)}
			</section>
		</MainLayout>
	)
}
